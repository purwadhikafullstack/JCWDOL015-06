generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Store {
  id   Int    @id @default(autoincrement())
  name String
  address String

  StockHistory StockHistory[]
  User User[]
  Stock Stock[]
  Cart Cart[]
  Order Order[]
}

model User {
  id        Int      @id @default(autoincrement())
  username  String   @unique
  email     String
  firstName String
  lastName  String
  role      Role
  storeId   Int?
  store     Store?    @relation(fields: [storeId], references: [id])
  password  String
  avatar    String?
  isVerify  Int
  mobileNum String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  StockHistory StockHistory[]
  Cart Cart[]
  Order Order[]
}

model Category {
  id   Int    @id @default(autoincrement())
  name String

  Product Product[]
}

model Product {
  id         Int       @id @default(autoincrement())
  productName String   @unique
  price      Float
  desc       String
  imageUrls  String
  categoryId Int
  category   Category  @relation(fields: [categoryId], references: [id])
  weight Int
  productDiscounts    ProductDiscount[]

  StockHistory StockHistory[]
  CartItem CartItem[]
  OrderItem OrderItem[]
  Stock Stock[]
}

model ProductDiscount {
  id         Int      @id @default(autoincrement())
  productId  Int
  discountId Int
  product    Product  @relation(fields: [productId], references: [id])
  discount   Discount @relation(fields: [discountId], references: [id])
}

model Discount {
  id                    Int       @id @default(autoincrement())
  name                  String
  discountType          DiscountType
  appliedDiscountType   AppliedDiscountType
  discountPercentage    Int?
  discountAmount        Int?
  minimumPurchaseAmount Int?

  ProductDiscount ProductDiscount[]

  Cart Cart[]

  CartItem CartItem[]

  Order Order[]

  OrderItem OrderItem[]
}

model Stock {
  id        Int      @id @default(autoincrement())
  productId Int
  storeId   Int
  quantity  Int
  product   Product  @relation(fields: [productId], references: [id])
  store     Store    @relation(fields: [storeId], references: [id])
}

model StockHistory {
  id             Int      @id @default(autoincrement())
  createdAt      DateTime @default(now())
  userId         Int
  storeId        Int
  productId      Int
  quantityChanged Int
  totalQuantity  Int
  user           User     @relation(fields: [userId], references: [id])
  store          Store    @relation(fields: [storeId], references: [id])
  product        Product  @relation(fields: [productId], references: [id])
}

model Cart {
  id             Int      @id @default(autoincrement())
  discountId     Int?
  discount       Discount?    @relation(fields: [discountId], references: [id])
  totalPrice     Float
  totalDiscount  Float
  createdAt      DateTime @default(now())
  storeId        Int
  store          Store    @relation(fields: [storeId], references: [id])
  userId         Int
  user           User     @relation(fields: [userId], references: [id])
  cartItems      CartItem[]
}

model CartItem {
  id             Int      @id @default(autoincrement())
  cartId         Int
  productId      Int
  quantity       Int
  totalPrice     Float
  totalDiscount  Float
  discountId     Int?
  discount       Discount?    @relation(fields: [discountId], references: [id])
  cart           Cart     @relation(fields: [cartId], references: [id])
  product        Product  @relation(fields: [productId], references: [id])
}

model Order {
  id             Int      @id @default(autoincrement())
  discountId     Int?
  discount       Discount?    @relation(fields: [discountId], references: [id])
  totalPrice     Float
  totalDiscount  Float
  createdAt      DateTime @default(now())
  storeId         Int
  store           Store   @relation(fields: [storeId], references: [id])
  userId         Int
  user           User    @relation(fields: [userId], references: [id])
  orderItems      OrderItem[]
}

model OrderItem {
  id             Int      @id @default(autoincrement())
  orderId         Int
  productId      Int
  quantity       Int
  totalPrice     Float
  totalDiscount  Float
  discountId     Int?
  discount       Discount?    @relation(fields: [discountId], references: [id])
  order           Order     @relation(fields: [orderId], references: [id])
  product        Product  @relation(fields: [productId], references: [id])
}

enum Role {
  USER
  STORE_ADMIN
  SUPER_ADMIN
}

enum DiscountType {
  PERCENTAGE
  AMOUNT
  BUY_ONE_GET_ONE
}

enum AppliedDiscountType {
  ON_PRODUCT
  MINIMUM_PURCHASE
  BUY_ONE_GET_ONE
}
